Ural--1086--Cryptography
by NowOrNever（520Eos@gmail.com）
====
#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>

using namespace std;
const int kMaxn = 200000;

int cnt, Prime[ kMaxn + 7 ];
bool isPrime[ kMaxn + 7 ];

/*
bool isprime(int n){
	for(int i = 2;i*i <= 5005;i++){
		if(n % i == 0) return false;
	}
	return n!= 1;
}

int prime[Max_N];
bool is_prime[Max_N];
int sieve(int n){
	int p = 0;
	for(int i = 0;i <= n;i++) is_prime[i] = true;
	is_prime[0] = is_prime[1] = false;
	for(int i = 2;i <= n;i++){
		if(is_prime[i]){
			prime[p++] = i;
			for(int j = 2 * i ;j <= n;j += i)  is_prime[j] = false;
		} 
	}
	return p;
}
*/

void GetPrime ()
{
    cnt=0;
    for ( int i = 2; i <= kMaxn; i++ )
        isPrime[i] = true;
    for ( int i = 2; i <= kMaxn; i++ )
    {
        if ( isPrime[i] )
            Prime[++cnt] = i;
        for ( int j = 1; j <= cnt && i * Prime[j] <= kMaxn; j++ )
        {
            isPrime[ i * Prime[j] ] = false;
            if ( i % Prime[j] == 0 )
                break;
        }
    }
}

int main()
{
    GetPrime ();
    
    int T;
    scanf ( "%d", &T );
    while ( T-- )
    {
        int k;
        scanf ( "%d", &k );
        printf ( "%d\n", Prime[k] );
    }
    
    return 0;
}
